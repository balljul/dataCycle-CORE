default: &defaults
  # Your push api key, it is possible to set this dynamically using ERB:
<<<<<<< HEAD
  push_api_key: "<%= ENV['APPSIGNAL_PUSH_API_KEY'] %>"
=======
  # push_api_key: "<%= ENV['APPSIGNAL_PUSH_API_KEY'] %>"
  push_api_key: "ffb2c81e-7d56-4706-8f4c-d7a3e47240f9"
>>>>>>> old/develop

  # Your app's name
  name: <%= ENV["APPSIGNAL_APP_NAME"] %>

  # Actions that should not be monitored by AppSignal
  # ignore_actions:
  #   - ApplicationController#isup

  # Errors that should not be recorded by AppSignal
  # For more information see our docs:
  # https://docs.appsignal.com/ruby/configuration/ignore-errors.html
  ignore_errors:
     - DataCycleCore::Error::RecordNotFoundError
     - DataCycleCore::Error::Api::InvalidArgumentError
  #   - NoMemoryError
  #   - ScriptError
  #   - LoadError
  #   - NotImplementedError
  #   - SyntaxError
  #   - SecurityError
  #   - SignalException
  #   - Interrupt
  #   - SystemExit
  #   - SystemStackError

#  ignore_actions:
#    - test

  # See http://docs.appsignal.com/ruby/configuration/options.html for
  # all configuration options.

# Configuration per environment, leave out an environment or set active
# to false to not push metrics for that environment.
development:
  <<: *defaults
  active: false
#  enable_frontend_error_catching: true
  enable_gc_instrumentation: true

production:
  <<: *defaults
  active: true
  revision: <%= ENV["APPSIGNAL_APP_REVISION"] %>
#  enable_frontend_error_catching: true
  enable_gc_instrumentation: true

review:
  <<: *defaults
  active: false

staging:
  <<: *defaults
  active: false
#  enable_frontend_error_catching: true
  enable_gc_instrumentation: true
