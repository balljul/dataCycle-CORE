# frozen_string_literal: true

uri = api_v4_concept_scheme_url(api_subversion: @api_subversion, id: content.id, language: serialize_language(@language))

json = {}

if options[:full]
  value_data =
    if @language.size == 1 && options[:languages] == ['de']
      content.name
    else
      [{ '@language' => 'de', '@value' => content.name }]
    end
  json.merge!({
    '@id' => content.id,
    '@type' => 'skos:ConceptScheme',
    'dc:multilingual' => false,
    'dc:translation' => ['de'],
    'dc:entityUrl' => uri,
    'skos:prefLabel' => value_data,
    'dc:hasConcept' => classifications_api_v4_concept_scheme_url(api_subversion: @api_subversion, id: content.id, language: serialize_language(@language)),
    'dct:created' => content.created_at,
    'dct:modified' => content.updated_at,
    'dct:deleted' => content.deleted_at
  }.compact)
else
  json.merge!({
    '@id' => content.id,
    '@type' => 'skos:ConceptScheme'
  }.compact)
end
if options[:field_filter] && options[:fields].present?
  json.select { |key, _value| api_default_attributes.include?(key) || select_attributes(options[:fields]).include?(key) }
else
  json
end
