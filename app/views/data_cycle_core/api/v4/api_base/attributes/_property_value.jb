# frozen_string_literal: true

json ||= {}
api_property_definition = api_definition(definition)

value = load_value_object(content, key, value, options[:languages], api_property_definition)

if value.present?
  json = render "data_cycle_core/api/v#{@api_version}/api_base/property_value_header", key: key, definition: definition
  json = json.merge({ 'value' => value })
  json = json.merge({ 'unitCode' => api_property_definition.dig('unit_code') }) if api_property_definition.dig('unit_code').present?
  json = json.merge({ 'unitText' => api_property_definition.dig('unit_text') }) if api_property_definition.dig('unit_text').present?

  if api_property_definition.dig('small_header')
    json.delete('identifier')
    json.delete('name')
  end
end

json
