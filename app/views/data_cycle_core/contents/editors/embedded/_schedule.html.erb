<%= tag.div class: "content-object-item draggable_#{sanitize_to_id(key)} accordion-item is-active",
  id: "#{sanitize_to_id(key)}_item_#{index}",
  data: {
    id: local_assigns[:object]&.id,
    index: index,
    accordion_item: true
  } do %>

  <%
    readonly = !attribute_editable?(key, definition, local_assigns[:options], local_assigns[:content])
    embedded_prefix = embedded_key_prefix(key, index)
  %>

  <span class="embedded-header">
    <% unless true # unless readonly -> disabled, schedules cant be ordered %>
      <span class="draggable-handle"><i class="fa fa-bars" aria-hidden="true"></i></span>
      <span class="swap-prev swap-button disabled"
        data-dc-tooltip="<%= t('embedded.move_up', locale: active_ui_locale) %>"><i
          class="fa fa-arrow-up" aria-hidden="true"></i></span>
      <span class="swap-next swap-button disabled"
        data-dc-tooltip="<%= t('embedded.move_down', locale: active_ui_locale) %>"><i
          class="fa fa-arrow-down" aria-hidden="true"></i></span>
    <% end %>
  </span>

  <a href="#" class="accordion-title">
    <span class="title">
      <span class="icon"><i class="fa fa-calendar" aria-hidden="true"></i></span>
      <span class="embedded-label"><%= translated_attribute_label(key, definition, local_assigns[:content], local_assigns[:options]) %></span>
      <%= render 'data_cycle_core/contents/helper_text', key: key, definition: definition, content: contextual_content(local_assigns) %>
    </span>
  </a>

  <% unless readonly %>
    <%= button_tag tag.i(class: 'fa fa-times'), type: :button, class: 'button removeContentObject alert', data: {
          confirm_delete: local_assigns[:content]&.translatable? && definition&.dig('translated').to_s == 'true' && local_assigns[:object]&.translations&.many? ? t('actions.delete_with_translated_html', locale: active_ui_locale) : nil
        } %>
  <% end %>

  <%= hidden_field_tag("#{embedded_prefix}[id]", local_assigns[:object].id) unless local_assigns[:duplicated_content] || local_assigns[:object].nil? %>

  <% value = local_assigns[:object]&.to_h || {} %>

  <div class="schedule-editor embedded-properties accordion-content" data-tab-content>
    <div class="daterange schedule-range">
      <div class="form-element start">
        <% full_day = value&.dig(:duration).to_i.positive? && value&.dig(:duration) % 1.day == 0 && Time.zone.now.beginning_of_day == value&.dig(:start_time, :time) %>

        <%= label_tag "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id("#{embedded_prefix}[start_time][time]")}" do %>
          <%= content_tag(:i, nil, class: 'fa fa-ban', aria_hidden: true) if readonly %>
          <%= t('schedule.dtstart', locale: active_ui_locale) %>
        <% end %>
        <% if readonly %>
          <%= text_field_tag "#{embedded_prefix}[start_time][time]",
            l(value&.dig(:start_time, :time)&.in_time_zone.try(full_day ? :to_date : :to_datetime), format: :edit, locale: active_ui_locale),
            class: 'read-only date',
            id: "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id("#{embedded_prefix}[start_time][time]")}", readonly: true %>
        <% else %>
          <%= datetime_field_tag "#{embedded_prefix}[start_time][time]", value&.dig(:start_time, :time)&.in_time_zone, id: "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id("#{embedded_prefix}[start_time][time]")}", data: { type: 'datepicker', disable_time: full_day } %>
        <% end %>
      </div>

      <div class="form-element duration">
        <%= label_tag "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id("#{embedded_prefix}[duration]")}", class: 'duration-label' do %>
          <%= t('schedule.duration.root', locale: active_ui_locale) %>
        <% end %>

        <% schedule_duration_values(value&.dig(:duration)).each do |unit, duration| %>
          <div class="duration-<%= unit %> duration-part">
            <%= number_field_tag "#{embedded_prefix}[duration][#{unit}]",
              duration[:value],
              class: "date #{'read-only' if readonly}",
              id: "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id("#{embedded_prefix}[duration][#{unit}]")}",
              step: 1,
              min: 0,
              placeholder: 0,
              max: duration[:max],
              readonly: readonly %>

            <%= label_tag "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id("#{embedded_prefix}[duration][#{unit}]")}" do %>
              <%= content_tag(:i, nil, class: 'fa fa-ban', aria_hidden: true) if readonly %>
              <%= t("schedule.duration.#{unit}", locale: active_ui_locale) %>
            <% end %>
          </div>
        <% end %>
      </div>
    </div>

    <div
      class="rrules <%= value&.dig(:rrules, 0, :rule_type)&.remove('IceCube::')&.remove('Rule')&.downcase || 'single_occurrence' %>">
      <div class="form-element">
        <%= label_tag "#{embedded_prefix}[rrules][][rule_type]" do %>
          <%= content_tag(:i, nil, class: 'fa fa-ban', aria_hidden: true) if readonly %>
          <%= t('schedule.rrule', locale: active_ui_locale) %>
        <% end %>
        <%= hidden_field_tag "#{embedded_prefix}[rrules][][rule_type]", value.dig(:rrules, 0, :rule_type) || 'IceCube::SingleOccurrenceRule' if readonly %>
        <%= select_tag "#{embedded_prefix}[rrules][][rule_type]", options_for_select(ice_cube_select_options(readonly), value.dig(:rrules, 0, :rule_type)), class: 'rrule-type-selector', disabled: readonly %>
      </div>

      <div class="form-element daily weekly monthly yearly">
        <%= label_tag "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id("#{embedded_prefix}[rrules][interval]")}" do %>
          <%= content_tag(:i, nil, class: 'fa fa-ban', aria_hidden: true) if readonly %>
          <span class="daily"><%= t('schedule.every.maskulin', locale: active_ui_locale) %></span>
          <span class="weekly"><%= t('schedule.every.feminin', locale: active_ui_locale) %></span>
          <span class="monthly"><%= t('schedule.every.neutrum', locale: active_ui_locale) %></span>
          <span class="yearly"><%= t('schedule.every.neutrum', locale: active_ui_locale) %></span>
        <% end %>
        <%= number_field_tag "#{embedded_prefix}[rrules][][interval]", value&.dig(:rrules, 0, :interval) || 1, in: 1..30, step: 1, id: "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id("#{embedded_prefix}[rrules][interval]")}", readonly: readonly %>
        <label class="after-label">
          <span class="daily"><%= t('schedule.day', locale: active_ui_locale) %></span>
          <span class="weekly"><%= t('schedule.week', locale: active_ui_locale) %></span>
          <span class="monthly"><%= t('schedule.month', locale: active_ui_locale) %></span>
          <span class="yearly"><%= t('schedule.year', locale: active_ui_locale) %></span>
        </label>
      </div>

      <div class="weekly form-element">
        <%= label_tag sanitize_to_id("#{embedded_prefix}[rrules][][validations][day]") do %>
          <%= content_tag(:i, nil, class: 'fa fa-ban', aria_hidden: true) if readonly %>
          <%= t('schedule.on', locale: active_ui_locale) %>
        <% end %>
        <% [*(1..6), 0].each do |v| %>
          <span class="weekday-checkbox">
            <%= hidden_field_tag "#{embedded_prefix}[rrules][][validations][day][]", v if readonly && value&.dig(:rrules, 0, :validations, :day)&.include?(v) %>
            <%= check_box_tag "#{embedded_prefix}[rrules][][validations][day][]", v, value&.dig(:rrules, 0, :validations, :day)&.include?(v), id: sanitize_to_id("#{embedded_prefix}[rrules][][validations][day][#{v}]"), disabled: readonly %>
            <%= label_tag sanitize_to_id("#{embedded_prefix}[rrules][][validations][day][#{v}]"), t('date.abbr_day_names', locale: active_ui_locale)[v] %>
          </span>
        <% end %>
      </div>

      <%= hidden_field_tag "#{embedded_prefix}[rrules][][validations][day_of_week]", value&.dig(:rrules, 0, :validations, :day_of_week)&.to_json if readonly && value&.dig(:rrules, 0, :validations, :day_of_week).present? %>
      <%= hidden_field_tag "#{embedded_prefix}[rrules][][validations][day_of_month]", value&.dig(:rrules, 0, :validations, :day_of_month)&.to_json if readonly && value&.dig(:rrules, 0, :validations, :day_of_month).present? %>

      <div class="until daily weekly monthly yearly form-element">
        <%= label_tag "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id("#{embedded_prefix}[rrules][until]")}" do %>
          <%= content_tag(:i, nil, class: 'fa fa-ban', aria_hidden: true) if readonly %>
          <%= t('terms.until', locale: active_ui_locale) %>
        <% end %>
        <% if readonly %>
          <%= text_field_tag "#{embedded_prefix}[rrules][][until]",
            l(value.dig(:rrules, 0, :until)&.to_date, locale: active_ui_locale),
            class: 'read-only date',
            id: "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id("#{embedded_prefix}[rrules][until]")}", readonly: true %>
        <% else %>
          <%= date_field_tag "#{embedded_prefix}[rrules][][until]",
            value&.dig(:rrules, 0, :until)&.to_date,
            id: "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id("#{embedded_prefix}[rrules][until]")}",
            data: {
              type: 'datepicker' ,
              min_date: value&.dig(:start_time, :time)&.in_time_zone
            } %>
        <% end %>
      </div>

      <div class="special-dates daterange single_occurrence daily weekly monthly yearly">
        <%= hidden_field_tag "#{embedded_prefix}[rtimes]", value&.dig(:rtimes)&.map{ |t| l(t[:time]&.in_time_zone, format: :edit, locale: active_ui_locale) }&.join(', ') %>

        <div class="form-element exdate">
          <%= label_tag "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id("#{embedded_prefix}[extimes]")}" do %>
            <%= content_tag(:i, nil, class: 'fa fa-ban', aria_hidden: true) if readonly %>
            <%= t('schedule.exdate', locale: active_ui_locale) %>
          <% end %>
          <% if readonly %>
            <%= text_field_tag "#{embedded_prefix}[extimes]",
              value&.dig(:extimes)&.map{ |t| l(t[:time]&.in_time_zone, format: :edit, locale: active_ui_locale) }&.join(', '),
              class: 'read-only date',
              id: "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id("#{embedded_prefix}[extimes]")}", readonly: true %>
          <% else %>
            <%= date_field_tag "#{embedded_prefix}[extimes]",
              value&.dig(:extimes)&.map { |t| t[:time]&.in_time_zone }&.join(', '),
              id: "#{local_assigns.dig(:options, :prefix)}#{sanitize_to_id("#{embedded_prefix}[extimes]")}",
              data: {
                type: 'datepicker',
                mode: 'multiple' ,
                min_date: value&.dig(:start_time, :time)&.in_time_zone,
                max_date: value&.dig(:rrules, 0, :until)
              } %>
          <% end %>
        </div>
      </div>
    </div>

  </div>
<% end %>
